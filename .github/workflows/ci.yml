
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: TypeScript check
        run: npx tsc --noEmit
      
      - name: ESLint check
        run: npx eslint --max-warnings 0 "src/**/*.{ts,tsx}"
      
      - name: Run tests
        run: npm test -- --coverage
      
      - name: Consensus Service tests
        run: npm test -- --testMatch "**/ConsensusService.test.ts" --coverage
      
      - name: Dependency security check
        run: npx dependency-check --failOnCVSS 7

      - name: TypeScript strict audit
        run: npx ts-strict-audit

      - name: Build
        run: npm run build

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/

      - name: Check for prohibited types
        run: |
          if grep -r --include="*.ts" --include="*.tsx" "\: any" src/; then
            echo "Found prohibited 'any' types in codebase"
            exit 1
          fi
      
      - name: Check for weak optional chaining
        run: |
          UNSAFE_OPTIONAL_CHAINS=$(grep -r --include="*.ts" --include="*.tsx" -E "\?\.[a-zA-Z0-9_]+\(" src/ || true)
          if [ ! -z "$UNSAFE_OPTIONAL_CHAINS" ]; then
            echo "Found potentially unsafe optional chaining without null checks:"
            echo "$UNSAFE_OPTIONAL_CHAINS"
            exit 1
          fi
